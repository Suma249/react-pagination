{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\choosy\\\\Documents\\\\React-Projects\\\\react-pagination\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Posts from './components/Posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  //we cant put async with useEffect hook, so we will use a seperate function inside useEffect hook\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n      setPosts(res.data);\n      setLoading(false);\n    };\n    fetchPosts();\n  }, []);\n  //fetchposts runs whenver component mounts, and it also runs whenver it updates, that will result in never ending loop so to stop ythis we will pass empty array as second parameter to useEffect hook\n  //get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-primary mb-3\",\n      children: \"My Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      posts: currentPosts,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+BPBRoyLxN1+E6ocVmhImLmBE6I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","Posts","jsxDEV","_jsxDEV","App","_s","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","fetchPosts","res","get","data","indexOfLastPost","indexOfFirstPost","currentPosts","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/choosy/Documents/React-Projects/react-pagination/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Posts from './components/Posts';\n\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n\n  //we cant put async with useEffect hook, so we will use a seperate function inside useEffect hook\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n      setPosts(res.data);\n      setLoading(false);\n    }\n    fetchPosts()\n  }, [])\n  //fetchposts runs whenver component mounts, and it also runs whenver it updates, that will result in never ending loop so to stop ythis we will pass empty array as second parameter to useEffect hook\n  //get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  return (\n    <div className=\"container mt-5\">\n      <h1 className='text-primary mb-3'>My Blog</h1>\n      <Posts posts={currentPosts} loading={loading} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BL,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMM,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,4CAA4C,CAAC;MACzET,QAAQ,CAACQ,GAAG,CAACE,IAAI,CAAC;MAClBR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IACDK,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACA,MAAMI,eAAe,GAAGR,WAAW,GAAGE,YAAY;EAClD,MAAMO,gBAAgB,GAAGD,eAAe,GAAGN,YAAY;EACvD,MAAMQ,YAAY,GAAGd,KAAK,CAACe,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;EACnE,oBACEf,OAAA;IAAKmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BpB,OAAA;MAAImB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9CxB,OAAA,CAACF,KAAK;MAACK,KAAK,EAAEc,YAAa;MAACZ,OAAO,EAAEA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAACtB,EAAA,CA3BQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}